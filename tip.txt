git init 

- .git 폴더 생성 그리고 .git을 생성한 폴더는 git이 관리하기 시작함.


git add .

- 모든 파일 스테이징(추적)


git commit -m

- message 이름으로 현재 코드들을 기억함


git log 

- 커밋 로그를 확인


git reset --hard [git log의 커밋 해쉬코드]

- 커밋 번호에 해당하는 커밋으로 코드를 롤백


git reset --hard 

- 마지막으로 커밋된 상태를 날리고 이전으로 돌아간다.
 

git remote add origin 레포지토리 주소

- 레포지토리와 내 로컬 폴더를 연결한다.


git push origin main 

- 깃허브 레포지토리 메인 브렌치에 현재 커밋들을 넣는다.


git clone 레포지토리 주소

- 깃허브 레포지토리 모든 커밋들을 내 로컬로 가져온다.


git pull origin master 

- 서버에서 변경사항이 일어난 것을 로컬로 동기화한다.


컨플릭트 해결

- git pull 로 원격의 변경사항을 받아서 해당 부분 수정


git branch 

- 현재 생성되어있는 브랜치의 목록을 본다.


git branch newFeature

- newFeature라는 새로운 브랜치를 만든다.


git checkout newFeature 

- newFeature라는 브랜치로 이동한다.


git branch -D newFeature

- newFeature라는 브랜치를 삭제한다.


git push origin 브랜치이름

- 특정 브랜치를 깃허브에 푸쉬한다


git pull origin 브랜치이름

- 브랜치를 깃허브에서 가져와 최신화한다. 


.